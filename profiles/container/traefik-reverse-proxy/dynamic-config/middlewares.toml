[http.middlewares.public.chain]
# middlewares = [ "rate-limit", "secure-headers", "latency-check", "network-error-check" ]
middlewares = [ "rate-limit", "secure-headers" ]


[http.middlewares.secured.chain]
#middlewares = [ "rate-limit", "secure-headers", "latency-check", "network-error-check", "authelia" ]
middlewares = [ "rate-limit", "secure-headers", "authelia" ]


[http.middlewares.rate-limit.rateLimit]
average = 100
period = "1s"
burst = 50


[http.middlewares.latency-check.circuitBreaker]
expression = "LatencyAtQuantileMS(50.0) > 100"


[http.middlewares.network-error-check.circuitBreaker]
expression = "NetworkErrorRatio() > 0.3"


# Define authelia middlewares here instead of in the docker labels so that the
# `secured` chain can be used for authelia itself. TODO: this is just not true
[http.middlewares.authelia.forwardAuth]
address = "http://authelia:9091/api/verify?rd=https://auth.ara.matrss.de/"
trustForwardHeader = true
authResponseHeaders = [ "Remote-User", "Remote-Groups", "Remote-Name", "Remote-Email" ]


# [http.middlewares.authelia-basic.forwardAuth]
# address = "http://authelia:9091/api/verify?auth=basic"
# trustForwardHeader = true
# authResponseHeaders = [ "Remote-User", "Remote-Groups", "Remote-Name", "Remote-Email" ]


# src: https://www.reddit.com/r/selfhosted/comments/iqvykv/authelia_and_multiple_apps/g5yds86/
[http.middlewares.secure-headers.headers]
accessControlAllowMethods = [ "GET", "OPTIONS", "PUT" ]
accessControlMaxAge = 100
hostsProxyHeaders = [ "X-Forwarded-Host" ]
sslRedirect = true
stsSeconds = 63072000
stsIncludeSubdomains = true
stsPreload = true
forceSTSHeader = true
frameDeny = true #overwritten by customFrameOptionsValue
# customFrameOptionsValue = "allow-from https:ara.matrss.de" #CSP takes care of this but may be needed for organizr.
contentTypeNosniff = true
browserXssFilter = true
# sslForceHost: true # add sslHost to all of the services
# sslHost: "example.com"
referrerPolicy = "same-origin"
# As seen on: https://github.com/Sonarr/Sonarr/issues/2517
# contentSecurityPolicy = "default-src 'none'; frame-ancestors 'none'; object-src 'none'; require-sri-for script style; base-uri 'self'; form-action 'self'; report-uri 'https://the-place-i-report-csp/errors/'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' wss:;"
# Bazarr currently broken, needs `script-src 'unsafe-inline'`
contentSecurityPolicy = "upgrade-insecure-requests; default-src 'none'; frame-ancestors 'self'; object-src 'none'; require-sri-for script style; base-uri 'self'; form-action 'self'; manifest-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; media-src 'self' blob: data:; worker-src 'self' blob:; font-src 'self'; connect-src 'self' wss:;"
featurePolicy = "camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"

[http.middlewares.secure-headers.headers.customResponseHeaders]
X-Robots-Tag = "none,noarchive,nosnippet,notranslate,noimageindex,"
server = ""